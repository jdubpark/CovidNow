!function(t){var a={};function e(n){if(a[n])return a[n].exports;var o=a[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=a,e.d=function(t,a,n){e.o(t,a)||Object.defineProperty(t,a,{enumerable:!0,get:n})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,a){if(1&a&&(t=e(t)),8&a)return t;if(4&a&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&a&&"string"!=typeof t)for(var o in t)e.d(n,o,function(a){return t[a]}.bind(null,o));return n},e.n=function(t){var a=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(a,"a",a),a},e.o=function(t,a){return Object.prototype.hasOwnProperty.call(t,a)},e.p="",e(e.s=3)}([,,,function(t,a,e){"use strict";var n=e(4);function o(){var t=$("#usmap").width(),a=2*t/3;$("#usmap svg").attr("width",t).attr("height",a)}var i=void 0;function r(t,a){var e=t,n="#usmap-state",o=n+"-stat";if($(n+"-name").text(e.name),$(o+"-total").text(e.data.total),$(o+"-deaths").text(e.data.deaths),$(o+"-recov").text(e.data.recovered),$(n+"-counties").html(""),i.states&&i.states.data&&i.states.data[a]){var r=i.states.data[a],s=Object.keys(r);s.sort((function(t,a){return r[t].total<r[a].total?1:r[t].total>r[a].total?-1:0})),s.splice(s.indexOf("_statewide"),1),r._statewide.total>e.data.total&&$(o+"-total").text(r._statewide.total),r._statewide.deaths>e.data.deaths&&$(o+"-deaths").text(r._statewide.deaths),s.forEach((function(t){return $(n+"-counties").append((a=t,e=r[t],'<div class="state-county"><div class="state-county-item loc">'+a+'</div><div class="state-county-item stat total">'+e.total+'</div><div class="state-county-item stat deaths">'+e.deaths+'</div><div class="state-county-item stat recov">'+(e.recovered||"?")+"</div></div>"));var a,e}))}}!function(t){t("#usmap").usmap({stateStyles:{fill:"#f1f2f3",stroke:"#999"},stateHoverStyles:{fill:"#db4031"},stateHoverAnimation:100,labelBackingHoverStyles:{fill:"#db4031"},click:function(t,a){var e=a.name,o=function(t){if(i&&n[t]){var a=n[t],e=i.usa.data.collected[a];return e||(e={total:0,deaths:0,recovered:0}),{abbr:t,name:a,data:e}}}(e);console.log(o),r(o,e)}}),t(window).on("resize",(function(){o()}));var a=t.ajax({method:"GET",url:"https://covidnow.com/api/core/all",dataType:"json"});a.done((function(t){i=t})),a.fail((function(t,a,e){return console.error(t,a,e)}))}(jQuery)},function(t){t.exports=JSON.parse('{"AL":"Alabama","AK":"Alaska","AS":"American Samoa","AZ":"Arizona","AR":"Arkansas","CA":"California","CO":"Colorado","CT":"Connecticut","DE":"Delaware","DC":"District Of Columbia","FM":"Federated States Of Micronesia","FL":"Florida","GA":"Georgia","GU":"Guam","HI":"Hawaii","ID":"Idaho","IL":"Illinois","IN":"Indiana","IA":"Iowa","KS":"Kansas","KY":"Kentucky","LA":"Louisiana","ME":"Maine","MH":"Marshall Islands","MD":"Maryland","MA":"Massachusetts","MI":"Michigan","MN":"Minnesota","MS":"Mississippi","MO":"Missouri","MT":"Montana","NE":"Nebraska","NV":"Nevada","NH":"New Hampshire","NJ":"New Jersey","NM":"New Mexico","NY":"New York","NC":"North Carolina","ND":"North Dakota","MP":"Northern Mariana Islands","OH":"Ohio","OK":"Oklahoma","OR":"Oregon","PW":"Palau","PA":"Pennsylvania","PR":"Puerto Rico","RI":"Rhode Island","SC":"South Carolina","SD":"South Dakota","TN":"Tennessee","TX":"Texas","UT":"Utah","VT":"Vermont","VI":"Virgin Islands","VA":"Virginia","WA":"Washington","WV":"West Virginia","WI":"Wisconsin","WY":"Wyoming"}')}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,