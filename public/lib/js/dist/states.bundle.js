!function(a){var e={};function t(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return a[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=a,t.c=e,t.d=function(a,e,n){t.o(a,e)||Object.defineProperty(a,e,{enumerable:!0,get:n})},t.r=function(a){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},t.t=function(a,e){if(1&e&&(a=t(a)),8&e)return a;if(4&e&&"object"==typeof a&&a&&a.__esModule)return a;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:a}),2&e&&"string"!=typeof a)for(var o in a)t.d(n,o,function(e){return a[e]}.bind(null,o));return n},t.n=function(a){var e=a&&a.__esModule?function(){return a.default}:function(){return a};return t.d(e,"a",e),e},t.o=function(a,e){return Object.prototype.hasOwnProperty.call(a,e)},t.p="",t(t.s=2)}([,,function(a,e,t){"use strict";var n=t(3);function o(){var a=$("#usmap").width(),e=2*a/3;$("#usmap svg").attr("width",a).attr("height",e)}var r=void 0;function s(a){var e=a,t="#usmap-state",n=t+"-stat";$(t+"-name").text(e.name),$(n+"-total").text(e.data.total),$(n+"-deaths").text(e.data.deaths),$(n+"-recov").text(e.data.recovered),console.log(e.data.cases),$(t+"-cases").html(""),e.data.cases.forEach((function(a){return $(t+"-cases").append('<div class="state-case"><div class="state-case-item loc">'+(e=a).location+'</div><div class="state-case-item stat total"><span>'+e.confirmed+'</span> Cases</div><div class="state-case-item stat deaths"><span>'+e.deaths+'</span> Deaths</div><div class="state-case-item stat recov"><span>'+e.recovered+"</span> Recovered</div></div>");var e}))}!function(a){a("#usmap").usmap({stateStyles:{fill:"#f1f2f3",stroke:"#999"},stateHoverStyles:{fill:"#db4031"},stateHoverAnimation:100,labelBackingHoverStyles:{fill:"#db4031"},click:function(a,e){var t=function(a){if(r&&n[a]){var e=r.usa.data.collected[a];return e||(e={total:0,deaths:0,recovered:0}),{abbr:a,name:n[a],data:e}}}(e.name);console.log(t),s(t)}}),a(window).on("resize",(function(){o()}));var e=a.ajax({method:"GET",url:"http://localhost:8012/api/core/all",dataType:"json"});e.done((function(a){console.log(a),r=a})),e.fail((function(a,e,t){return console.error(a,e,t)}))}(jQuery)},function(a){a.exports=JSON.parse('{"AL":"Alabama","AK":"Alaska","AS":"American Samoa","AZ":"Arizona","AR":"Arkansas","CA":"California","CO":"Colorado","CT":"Connecticut","DE":"Delaware","DC":"District Of Columbia","FM":"Federated States Of Micronesia","FL":"Florida","GA":"Georgia","GU":"Guam","HI":"Hawaii","ID":"Idaho","IL":"Illinois","IN":"Indiana","IA":"Iowa","KS":"Kansas","KY":"Kentucky","LA":"Louisiana","ME":"Maine","MH":"Marshall Islands","MD":"Maryland","MA":"Massachusetts","MI":"Michigan","MN":"Minnesota","MS":"Mississippi","MO":"Missouri","MT":"Montana","NE":"Nebraska","NV":"Nevada","NH":"New Hampshire","NJ":"New Jersey","NM":"New Mexico","NY":"New York","NC":"North Carolina","ND":"North Dakota","MP":"Northern Mariana Islands","OH":"Ohio","OK":"Oklahoma","OR":"Oregon","PW":"Palau","PA":"Pennsylvania","PR":"Puerto Rico","RI":"Rhode Island","SC":"South Carolina","SD":"South Dakota","TN":"Tennessee","TX":"Texas","UT":"Utah","VT":"Vermont","VI":"Virgin Islands","VA":"Virginia","WA":"Washington","WV":"West Virginia","WI":"Wisconsin","WY":"Wyoming"}')}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2xpYi9qcy9jdXN0b20vc3RhdGVzLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwic3RhdGVOYW1lcyIsInJlcXVpcmUiLCJyZXNpemVNYXAiLCJzdmdXaWR0aCIsIiQiLCJ3aWR0aCIsIm1hcEhlaWdodCIsImF0dHIiLCJjZEZldGNoIiwidW5kZWZpbmVkIiwibG9hZFN0YXRlRGF0YSIsInN0YXRlRGF0YSIsInNkIiwiaWRNYXAiLCJpZFN0YXQiLCJ0ZXh0IiwiZGF0YSIsInRvdGFsIiwiZGVhdGhzIiwicmVjb3ZlcmVkIiwiY29uc29sZSIsImxvZyIsImNhc2VzIiwiaHRtbCIsImZvckVhY2giLCJzQ2FzZSIsImFwcGVuZCIsImxvY2F0aW9uIiwiY29uZmlybWVkIiwidXNtYXAiLCJzdGF0ZVN0eWxlcyIsImZpbGwiLCJzdHJva2UiLCJzdGF0ZUhvdmVyU3R5bGVzIiwic3RhdGVIb3ZlckFuaW1hdGlvbiIsImxhYmVsQmFja2luZ0hvdmVyU3R5bGVzIiwiY2xpY2siLCJldmVudCIsImFiYnIiLCJjb2xsIiwidXNhIiwiY29sbGVjdGVkIiwiZ2V0U3RhdGVEYXRhIiwid2luZG93Iiwib24iLCJhamF4IiwibWV0aG9kIiwidXJsIiwiZGF0YVR5cGUiLCJkb25lIiwiZmFpbCIsImEiLCJiIiwiZXJyb3IiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gsRUFDaEYsSUFBSUksRUFBS1gsT0FBT1ksT0FBTyxNQUd2QixHQUZBMUIsRUFBb0JrQixFQUFFTyxHQUN0QlgsT0FBT0MsZUFBZVUsRUFBSSxVQUFXLENBQUVULFlBQVksRUFBTUssTUFBT0EsSUFDdEQsRUFBUEUsR0FBNEIsaUJBQVRGLEVBQW1CLElBQUksSUFBSU0sS0FBT04sRUFBT3JCLEVBQW9CVSxFQUFFZSxFQUFJRSxFQUFLLFNBQVNBLEdBQU8sT0FBT04sRUFBTU0sSUFBUUMsS0FBSyxLQUFNRCxJQUM5SSxPQUFPRixHQUlSekIsRUFBb0I2QixFQUFJLFNBQVMxQixHQUNoQyxJQUFJUyxFQUFTVCxHQUFVQSxFQUFPcUIsV0FDN0IsV0FBd0IsT0FBT3JCLEVBQWdCLFNBQy9DLFdBQThCLE9BQU9BLEdBRXRDLE9BREFILEVBQW9CVSxFQUFFRSxFQUFRLElBQUtBLEdBQzVCQSxHQUlSWixFQUFvQmEsRUFBSSxTQUFTaUIsRUFBUUMsR0FBWSxPQUFPakIsT0FBT2tCLFVBQVVDLGVBQWUxQixLQUFLdUIsRUFBUUMsSUFHekcvQixFQUFvQmtDLEVBQUksR0FJakJsQyxFQUFvQkEsRUFBb0JtQyxFQUFJLEcsaUNDaEZyRCxJQUFNQyxFQUFhQyxFQUFRLEdBRTNCLFNBQVNDLElBQ1AsSUFBTUMsRUFBV0MsRUFBRSxVQUFVQyxRQUFTQyxFQUF1QixFQUFYSCxFQUFhLEVBQy9EQyxFQUFFLGNBQWNHLEtBQUssUUFBU0osR0FBVUksS0FBSyxTQUFVRCxHQUd6RCxJQUFJRSxPQUFVQyxFQVVkLFNBQVNDLEVBQWNDLEdBQ3JCLElBQU1DLEVBQUtELEVBQVdFLEVBQVEsZUFBZ0JDLEVBQVNELEVBQU0sUUFFN0RULEVBQUVTLEVBQU0sU0FBU0UsS0FBS0gsRUFBR3JDLE1BQ3pCNkIsRUFBRVUsRUFBTyxVQUFVQyxLQUFLSCxFQUFHSSxLQUFLQyxPQUNoQ2IsRUFBRVUsRUFBTyxXQUFXQyxLQUFLSCxFQUFHSSxLQUFLRSxRQUNqQ2QsRUFBRVUsRUFBTyxVQUFVQyxLQUFLSCxFQUFHSSxLQUFLRyxXQUVoQ0MsUUFBUUMsSUFBSVQsRUFBR0ksS0FBS00sT0FDcEJsQixFQUFFUyxFQUFNLFVBQVVVLEtBQUssSUFDdkJYLEVBQUdJLEtBQUtNLE1BQU1FLFNBQVEsU0FBQUMsR0FBQSxPQUFTckIsRUFBRVMsRUFBTSxVQUFVYSxPQVMxQyw2REFGa0JWLEVBUGlEUyxHQVVqQ0UsU0FEbEMsdURBRTBDWCxFQUFLWSxVQUYvQyxxRUFHMkNaLEVBQUtFLE9BSGhELHFFQUkwQ0YsRUFBS0csVUFKL0MsaUNBRlQsSUFBMkJILE1BVTNCLFNBQVVaLEdBQ1JBLEVBQUUsVUFBVXlCLE1BQU0sQ0FFaEJDLFlBQWEsQ0FBQ0MsS0FBTSxVQUFXQyxPQUFRLFFBQ3ZDQyxpQkFBa0IsQ0FBQ0YsS0FBTSxXQUN6Qkcsb0JBQXFCLElBQ3JCQyx3QkFBeUIsQ0FBQ0osS0FBTSxXQUVoQ0ssTUFBTyxTQUFTQyxFQUFPckIsR0FBSyxJQUVwQkwsRUE5Q1osU0FBc0IyQixHQUNwQixHQUFLOUIsR0FBWVIsRUFBV3NDLEdBQTVCLENBQ0EsSUFBSUMsRUFBTy9CLEVBQVFnQyxJQUFJeEIsS0FBS3lCLFVBQVVILEdBSXRDLE9BSEtDLElBQ0hBLEVBQU8sQ0FBQ3RCLE1BQU8sRUFBR0MsT0FBUSxFQUFHQyxVQUFXLElBRW5DLENBQUNtQixPQUFNL0QsS0FBTXlCLEVBQVdzQyxHQUFPdEIsS0FBTXVCLElBd0N0QkcsQ0FERzFCLEVBQWR6QyxNQUVQNkMsUUFBUUMsSUFBSVYsR0FDWkQsRUFBY0MsTUFJbEJQLEVBQUV1QyxRQUFRQyxHQUFHLFVBQVUsV0FDckIxQyxPQUdGLElBQU0yQyxFQUFPekMsRUFBRXlDLEtBQUssQ0FDbEJDLE9BQVEsTUFDUkMsSUFBSyxxQ0FDTEMsU0FBVSxTQUVaSCxFQUFLSSxNQUFLLFNBQUFqQyxHQUNSSSxRQUFRQyxJQUFJTCxHQUNaUixFQUFVUSxLQUVaNkIsRUFBS0ssTUFBSyxTQUFDQyxFQUFHQyxFQUFHL0UsR0FBUCxPQUFhK0MsUUFBUWlDLE1BQU1GLEVBQUdDLEVBQUcvRSxNQTdCN0MsQ0E4QkdpRixTIiwiZmlsZSI6InN0YXRlcy5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMik7XG4iLCIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHN0YXRlTmFtZXMgPSByZXF1aXJlKCcuLi8uLi9qc29uL3N0YXRlcy5qc29uJyk7XG5cbmZ1bmN0aW9uIHJlc2l6ZU1hcCgpe1xuICBjb25zdCBzdmdXaWR0aCA9ICQoJyN1c21hcCcpLndpZHRoKCksIG1hcEhlaWdodCA9IHN2Z1dpZHRoICogMi8zOyAvLyByYXRpbyB3OmggMzoyXG4gICQoJyN1c21hcCBzdmcnKS5hdHRyKCd3aWR0aCcsIHN2Z1dpZHRoKS5hdHRyKCdoZWlnaHQnLCBtYXBIZWlnaHQpO1xufTtcblxubGV0IGNkRmV0Y2ggPSB1bmRlZmluZWQ7IC8vIGNvcmUgZGF0YSBmZXRjaFxuZnVuY3Rpb24gZ2V0U3RhdGVEYXRhKGFiYnIpe1xuICBpZiAoIWNkRmV0Y2ggfHwgIXN0YXRlTmFtZXNbYWJicl0pIHJldHVybiB1bmRlZmluZWQ7XG4gIGxldCBjb2xsID0gY2RGZXRjaC51c2EuZGF0YS5jb2xsZWN0ZWRbYWJicl07XG4gIGlmICghY29sbCl7IC8vIG5vIHJlcG9ydHMhIGdvb2RcbiAgICBjb2xsID0ge3RvdGFsOiAwLCBkZWF0aHM6IDAsIHJlY292ZXJlZDogMH07XG4gIH1cbiAgcmV0dXJuIHthYmJyLCBuYW1lOiBzdGF0ZU5hbWVzW2FiYnJdLCBkYXRhOiBjb2xsfTtcbn1cblxuZnVuY3Rpb24gbG9hZFN0YXRlRGF0YShzdGF0ZURhdGEpe1xuICBjb25zdCBzZCA9IHN0YXRlRGF0YSwgaWRNYXAgPSAnI3VzbWFwLXN0YXRlJywgaWRTdGF0ID0gaWRNYXArJy1zdGF0JztcbiAgLy8gc3RhdHNcbiAgJChpZE1hcCsnLW5hbWUnKS50ZXh0KHNkLm5hbWUpO1xuICAkKGlkU3RhdCsnLXRvdGFsJykudGV4dChzZC5kYXRhLnRvdGFsKTtcbiAgJChpZFN0YXQrJy1kZWF0aHMnKS50ZXh0KHNkLmRhdGEuZGVhdGhzKTtcbiAgJChpZFN0YXQrJy1yZWNvdicpLnRleHQoc2QuZGF0YS5yZWNvdmVyZWQpO1xuICAvLyBjYXNlc1xuICBjb25zb2xlLmxvZyhzZC5kYXRhLmNhc2VzKTtcbiAgJChpZE1hcCsnLWNhc2VzJykuaHRtbCgnJyk7XG4gIHNkLmRhdGEuY2FzZXMuZm9yRWFjaChzQ2FzZSA9PiAkKGlkTWFwKyctY2FzZXMnKS5hcHBlbmQoc3RhdGVDYXNlVGVtcGxhdGUoc0Nhc2UpKSk7XG4gIC8vIGNvbnN0IHVkID0gY2RGZXRjaC51c2EuZGF0YS5jb21waWxlZDtcbiAgLy8gJChpZFN0YXQrJy10b3RhbCcpLnRleHQodWQudG90YWwpO1xuICAvLyAkKGlkU3RhdCsnLXNvJykudGV4dCh1ZC5zdGF0ZXMudG90YWwpO1xuICAvLyAkKGlkU3RhdCsnLW5zJykudGV4dCh1ZC5ub24udG90YWwpO1xufVxuXG5mdW5jdGlvbiBzdGF0ZUNhc2VUZW1wbGF0ZShkYXRhKXtcbiAgLy8ge2xvY2F0aW9uOiBTLCByZWNvdmVyZWQ6IE4sIGNvbmZpcm1lZDogTiwgZGVhdGhzOiBOfVxuICByZXR1cm4gJzxkaXYgY2xhc3M9XCJzdGF0ZS1jYXNlXCI+JytcbiAgYDxkaXYgY2xhc3M9XCJzdGF0ZS1jYXNlLWl0ZW0gbG9jXCI+JHtkYXRhLmxvY2F0aW9ufTwvZGl2PmArXG4gIGA8ZGl2IGNsYXNzPVwic3RhdGUtY2FzZS1pdGVtIHN0YXQgdG90YWxcIj48c3Bhbj4ke2RhdGEuY29uZmlybWVkfTwvc3Bhbj4gQ2FzZXM8L2Rpdj5gK1xuICBgPGRpdiBjbGFzcz1cInN0YXRlLWNhc2UtaXRlbSBzdGF0IGRlYXRoc1wiPjxzcGFuPiR7ZGF0YS5kZWF0aHN9PC9zcGFuPiBEZWF0aHM8L2Rpdj5gK1xuICBgPGRpdiBjbGFzcz1cInN0YXRlLWNhc2UtaXRlbSBzdGF0IHJlY292XCI+PHNwYW4+JHtkYXRhLnJlY292ZXJlZH08L3NwYW4+IFJlY292ZXJlZDwvZGl2PmArXG4gIFwiPC9kaXY+XCI7XG59XG5cbihmdW5jdGlvbigkKXtcbiAgJCgnI3VzbWFwJykudXNtYXAoe1xuICAgIC8vIGh0dHBzOi8vbmV3c2lnbmF0dXJlLmdpdGh1Yi5pby91cy1tYXAvI3VzYWdlLXN0eWxlLW9wdGlvbnNcbiAgICBzdGF0ZVN0eWxlczoge2ZpbGw6ICcjZjFmMmYzJywgc3Ryb2tlOiAnIzk5OSd9LFxuICAgIHN0YXRlSG92ZXJTdHlsZXM6IHtmaWxsOiAnI2RiNDAzMSd9LFxuICAgIHN0YXRlSG92ZXJBbmltYXRpb246IDEwMCxcbiAgICBsYWJlbEJhY2tpbmdIb3ZlclN0eWxlczoge2ZpbGw6ICcjZGI0MDMxJ30sXG4gICAgLy8gVGhlIGNsaWNrIGFjdGlvblxuICAgIGNsaWNrOiBmdW5jdGlvbihldmVudCwgZGF0YSl7XG4gICAgICBjb25zdCB7bmFtZTogYWJicn0gPSBkYXRhO1xuICAgICAgY29uc3Qgc3RhdGVEYXRhID0gZ2V0U3RhdGVEYXRhKGFiYnIpO1xuICAgICAgY29uc29sZS5sb2coc3RhdGVEYXRhKTtcbiAgICAgIGxvYWRTdGF0ZURhdGEoc3RhdGVEYXRhKTtcbiAgICB9LFxuICB9KTtcblxuICAkKHdpbmRvdykub24oJ3Jlc2l6ZScsIGZ1bmN0aW9uKCl7XG4gICAgcmVzaXplTWFwKCk7XG4gIH0pO1xuXG4gIGNvbnN0IGFqYXggPSAkLmFqYXgoe1xuICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgdXJsOiAnaHR0cDovL2xvY2FsaG9zdDo4MDEyL2FwaS9jb3JlL2FsbCcsXG4gICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgfSk7XG4gIGFqYXguZG9uZShkYXRhID0+IHtcbiAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICBjZEZldGNoID0gZGF0YTtcbiAgfSk7XG4gIGFqYXguZmFpbCgoYSwgYiwgYykgPT4gY29uc29sZS5lcnJvcihhLCBiLCBjKSk7XG59KShqUXVlcnkpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==